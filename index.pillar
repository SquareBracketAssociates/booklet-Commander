!! Introduction

Commands are reification of actions.
They can be used to implement actions in many contexts such as text-editors, debuggers, web-browser, etc.
Since recent versions, Pharo had no unified way to express commands and this led to multiple implementation of the command design pattern spreading across projects.
Each project was re-implementing the design-pattern leading to slightly different version preventing the re-usability of common parts.
To solve this problem we started to analyse existing solutions.
We designed Commander20 framework that Pharo will use as canonical implementation of the command design pattern.
With time, all custom-implementations of the command design pattern will be migrated to use Commander20.
This booklet describes how commands are expressed in Pharo using Commander20.

To set some stage we start by defining a simple domain and applications in Spec20.
Then we show how commands can be defined.
In the final chapter we discuss the design of the framework with more details.

The code used of the contact book is available at *https://github.com/Ducasse/EgContactBook*.
The code contains tests that are not listed in this booklet but we encourage you to read them.


${inputFile:path=Chapters/ContactBook/ContactBook.pillar}$

${inputFile:path=Chapters/Commander/Commander.pillar}$

${inputFile:path=Chapters/CommanderDesign/CommanderDesign.pillar}$
